{
  "address": "0xAc40224a6f9AD24cc44cd9dA4255b45584e69AB7",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_depositor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_beneficiary",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_arbiter",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AlreadyFunded",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AlreadyReleased",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "EnforcedPause",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ExpectedPause",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotFunded",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OnlyArbiter",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OnlyDepositor",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OnlyDepositorCanSendETH",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ReentrancyGuardReentrantCall",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "depositor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "depositor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "arbiter",
          "type": "address"
        }
      ],
      "name": "EscrowCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "depositor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Refunded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Released",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "amount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "arbiter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "beneficiary",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depositor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "emergencyWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEscrowStatus",
      "outputs": [
        {
          "internalType": "address",
          "name": "_depositor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_beneficiary",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_arbiter",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isFunded",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_isReleased",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_isRefunded",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isFunded",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isRefunded",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isReleased",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "refund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "release",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x3ad8395944bb0769c7cb77c623b904aa84896f22d102c78c6c8592ed9da34ef7",
  "receipt": {
    "to": null,
    "from": "0xd6D22d84DF99D999876D9D9c5D626A410B9B8FAf",
    "contractAddress": "0xAc40224a6f9AD24cc44cd9dA4255b45584e69AB7",
    "transactionIndex": 1,
    "gasUsed": "813380",
    "logsBloom": "0x
    "blockHash": "0xd54839ad05a6dd37725eedbff9023155aba51d262197d2b02047a9bde8ed9e46",
    "transactionHash": "0x3ad8395944bb0769c7cb77c623b904aa84896f22d102c78c6c8592ed9da34ef7",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 1351846,
        "transactionHash": "0x3ad8395944bb0769c7cb77c623b904aa84896f22d102c78c6c8592ed9da34ef7",
        "address": "0xAc40224a6f9AD24cc44cd9dA4255b45584e69AB7",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000d6d22d84df99d999876d9d9c5d626a410b9b8faf"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xd54839ad05a6dd37725eedbff9023155aba51d262197d2b02047a9bde8ed9e46"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 1351846,
        "transactionHash": "0x3ad8395944bb0769c7cb77c623b904aa84896f22d102c78c6c8592ed9da34ef7",
        "address": "0xAc40224a6f9AD24cc44cd9dA4255b45584e69AB7",
        "topics": [
          "0x4743c0c2884de4f19f280dbd2cc93bc24491cdf876ed107046fe8194183c09e9",
          "0x000000000000000000000000d6d22d84df99d999876d9d9c5d626a410b9b8faf",
          "0x000000000000000000000000c8205f39a82b9bbefe242750289e4833db9cbffb",
          "0x000000000000000000000000435fd035329c428f7c7323999def2c8d5cacac28"
        ],
        "data": "0x",
        "logIndex": 1,
        "blockHash": "0xd54839ad05a6dd37725eedbff9023155aba51d262197d2b02047a9bde8ed9e46"
      }
    ],
    "blockNumber": 1351846,
    "cumulativeGasUsed": "813380",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xd6D22d84DF99D999876D9D9c5D626A410B9B8FAf",
    "0xC8205f39a82B9bBEFE242750289e4833dB9cbFFB",
    "0x435FD035329C428F7c7323999DEF2c8D5caCac28"
  ],
  "numDeployments": 1,
  "solcInputHash": "7f9cb6d461c90c105b79ec15ccbbe692",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_depositor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_arbiter\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AlreadyFunded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyReleased\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotFunded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyArbiter\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyDepositor\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyDepositorCanSendETH\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"arbiter\",\"type\":\"address\"}],\"name\":\"EscrowCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Refunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Released\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"amount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"arbiter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEscrowStatus\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_depositor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_arbiter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isFunded\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_isReleased\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_isRefunded\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isFunded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isRefunded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isReleased\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Your Name\",\"details\":\"A secure escrow contract that allows depositors to fund escrows and arbiters to release or refund funds to beneficiaries or depositors respectively.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Constructor creates a new escrow\",\"params\":{\"_arbiter\":\"The address that can release or refund funds\",\"_beneficiary\":\"The address that will receive funds if released\",\"_depositor\":\"The address that will fund the escrow\"}},\"deposit()\":{\"details\":\"Depositor funds the escrow\"},\"emergencyWithdraw()\":{\"details\":\"Emergency withdrawal function (only owner, when paused)\"},\"getEscrowStatus()\":{\"details\":\"Get escrow status\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"Emergency pause function (only owner)\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"refund()\":{\"details\":\"Arbiter refunds funds to depositor\"},\"release()\":{\"details\":\"Arbiter releases funds to beneficiary\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"Emergency unpause function (only owner)\"}},\"title\":\"TrustEscrow\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TrustEscrow.sol\":\"TrustEscrow\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    bool private _paused;\\n\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    /**\\n     * @dev The operation failed because the contract is paused.\\n     */\\n    error EnforcedPause();\\n\\n    /**\\n     * @dev The operation failed because the contract is not paused.\\n     */\\n    error ExpectedPause();\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        if (paused()) {\\n            revert EnforcedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        if (!paused()) {\\n            revert ExpectedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\\n * consider using {ReentrancyGuardTransient} instead.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\"},\"contracts/TrustEscrow.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Pausable.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\n/**\\n * @title TrustEscrow\\n * @dev A secure escrow contract that allows depositors to fund escrows\\n * and arbiters to release or refund funds to beneficiaries or depositors respectively.\\n * @author Your Name\\n */\\ncontract TrustEscrow is ReentrancyGuard, Pausable, Ownable {\\n    // Custom errors\\n    error InvalidAddress();\\n    error OnlyDepositor();\\n    error OnlyArbiter();\\n    error AlreadyFunded();\\n    error NotFunded();\\n    error AlreadyReleased();\\n    error InvalidAmount();\\n    error OnlyDepositorCanSendETH();\\n\\n    address public depositor;\\n    address public beneficiary;\\n    address public arbiter;\\n    uint256 public amount;\\n    bool public isFunded;\\n    bool public isReleased;\\n    bool public isRefunded;\\n\\n    event Deposited(address indexed depositor, uint256 amount);\\n    event Released(address indexed beneficiary, uint256 amount);\\n    event Refunded(address indexed depositor, uint256 amount);\\n    event EscrowCreated(address indexed depositor, address indexed beneficiary, address indexed arbiter);\\n\\n    modifier onlyDepositor() {\\n        if (msg.sender != depositor) revert OnlyDepositor();\\n        _;\\n    }\\n\\n    modifier onlyArbiter() {\\n        if (msg.sender != arbiter) revert OnlyArbiter();\\n        _;\\n    }\\n\\n    modifier notFunded() {\\n        if (isFunded) revert AlreadyFunded();\\n        _;\\n    }\\n\\n    modifier requireFunded() {\\n        if (!isFunded) revert NotFunded();\\n        _;\\n    }\\n\\n    modifier notReleased() {\\n        if (isReleased || isRefunded) revert AlreadyReleased();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Constructor creates a new escrow\\n     * @param _depositor The address that will fund the escrow\\n     * @param _beneficiary The address that will receive funds if released\\n     * @param _arbiter The address that can release or refund funds\\n     */\\n    constructor(address _depositor, address _beneficiary, address _arbiter) payable Ownable(_depositor) {\\n        if (_depositor == address(0)) revert InvalidAddress();\\n        if (_beneficiary == address(0)) revert InvalidAddress();\\n        if (_arbiter == address(0)) revert InvalidAddress();\\n        if (_beneficiary == _arbiter) revert InvalidAddress();\\n        if (_depositor == _beneficiary) revert InvalidAddress();\\n        if (_depositor == _arbiter) revert InvalidAddress();\\n\\n        depositor = _depositor;\\n        beneficiary = _beneficiary;\\n        arbiter = _arbiter;\\n\\n        emit EscrowCreated(depositor, beneficiary, arbiter);\\n    }\\n\\n    /**\\n     * @dev Depositor funds the escrow\\n     */\\n    function deposit() external payable onlyDepositor notFunded whenNotPaused nonReentrant {\\n        if (msg.value == 0) revert InvalidAmount();\\n\\n        amount = msg.value;\\n        isFunded = true;\\n        emit Deposited(depositor, msg.value);\\n    }\\n\\n    /**\\n     * @dev Arbiter releases funds to beneficiary\\n     */\\n    function release() external onlyArbiter requireFunded notReleased whenNotPaused nonReentrant {\\n        isReleased = true;\\n        \\n        (bool success, ) = payable(beneficiary).call{value: amount}(\\\"\\\");\\n        require(success, \\\"Failed to send ETH to beneficiary\\\");\\n        \\n        emit Released(beneficiary, amount);\\n    }\\n\\n    /**\\n     * @dev Arbiter refunds funds to depositor\\n     */\\n    function refund() external onlyArbiter requireFunded notReleased whenNotPaused nonReentrant {\\n        isRefunded = true;\\n        \\n        (bool success, ) = payable(depositor).call{value: amount}(\\\"\\\");\\n        require(success, \\\"Failed to send ETH to depositor\\\");\\n        \\n        emit Refunded(depositor, amount);\\n    }\\n\\n    /**\\n     * @dev Get escrow status\\n     */\\n    function getEscrowStatus() external view returns (\\n        address _depositor,\\n        address _beneficiary,\\n        address _arbiter,\\n        uint256 _amount,\\n        bool _isFunded,\\n        bool _isReleased,\\n        bool _isRefunded\\n    ) {\\n        return (depositor, beneficiary, arbiter, amount, isFunded, isReleased, isRefunded);\\n    }\\n\\n    /**\\n     * @dev Emergency pause function (only owner)\\n     */\\n    function pause() external onlyOwner {\\n        _pause();\\n    }\\n\\n    /**\\n     * @dev Emergency unpause function (only owner)\\n     */\\n    function unpause() external onlyOwner {\\n        _unpause();\\n    }\\n\\n    /**\\n     * @dev Emergency withdrawal function (only owner, when paused)\\n     */\\n    function emergencyWithdraw() external onlyOwner whenPaused {\\n        uint256 balance = address(this).balance;\\n        if (balance > 0) {\\n            (bool success, ) = payable(owner()).call{value: balance}(\\\"\\\");\\n            require(success, \\\"Failed to withdraw ETH\\\");\\n        }\\n    }\\n\\n    /**\\n     * @dev Function to receive ETH\\n     */\\n    receive() external payable {\\n        // Only allow deposits from the depositor\\n        if (msg.sender != depositor) {\\n            revert OnlyDepositorCanSendETH();\\n        }\\n        \\n        // Handle the deposit\\n        if (!isFunded) {\\n            amount = msg.value;\\n            isFunded = true;\\n            emit Deposited(depositor, msg.value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Function to handle failed ETH transfers\\n     */\\n    fallback() external payable {\\n        revert(\\\"Function not found\\\");\\n    }\\n}\\n\",\"keccak256\":\"0xd70fa76ddec5138b7d39e41648b61fea72adea85a9a447af701d944926b7be28\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052604051610e1a380380610e1a83398101604081905261002291610252565b6001600055826001600160a01b03811661005657604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61005f816101dc565b506001600160a01b0383166100875760405163e6c4247b60e01b815260040160405180910390fd5b6001600160a01b0382166100ae5760405163e6c4247b60e01b815260040160405180910390fd5b6001600160a01b0381166100d55760405163e6c4247b60e01b815260040160405180910390fd5b806001600160a01b0316826001600160a01b0316036101075760405163e6c4247b60e01b815260040160405180910390fd5b816001600160a01b0316836001600160a01b0316036101395760405163e6c4247b60e01b815260040160405180910390fd5b806001600160a01b0316836001600160a01b03160361016b5760405163e6c4247b60e01b815260040160405180910390fd5b600280546001600160a01b03199081166001600160a01b03868116918217909355600380548316868516908117909155600480549093169385169384179092556040517f4743c0c2884de4f19f280dbd2cc93bc24491cdf876ed107046fe8194183c09e990600090a4505050610295565b600180546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b038116811461024d57600080fd5b919050565b60008060006060848603121561026757600080fd5b61027084610236565b925061027e60208501610236565b915061028c60408501610236565b90509250925092565b610b76806102a46000396000f3fe60806040526004361061010d5760003560e01c806386d1a69f11610095578063d0e30db011610064578063d0e30db0146103c5578063db2e21bc146103cd578063f2fde38b146103e2578063fa2a899714610402578063fe25e00a146104215761019d565b806386d1a69f146103495780638da5cb5b1461035e578063aa8c217c14610381578063c7c4ff46146103a55761019d565b80636234216d116100dc5780636234216d1461026a578063715018a6146102e5578063779cd083146102fa5780637c6543031461031a5780638456cb59146103345761019d565b806338af3eed146101df5780633f4ba83a1461021c578063590e1ae3146102315780635c975abb146102465761019d565b3661019d576002546001600160a01b0316331461013d5760405163a3825a4360e01b815260040160405180910390fd5b60065460ff1661019b573460058190556006805460ff191660011790556002546040519182526001600160a01b0316907f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c49060200160405180910390a25b005b60405162461bcd60e51b8152602060048201526012602482015271119d5b98dd1a5bdb881b9bdd08199bdd5b9960721b60448201526064015b60405180910390fd5b3480156101eb57600080fd5b506003546101ff906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561022857600080fd5b5061019b610441565b34801561023d57600080fd5b5061019b610453565b34801561025257600080fd5b5060015460ff165b6040519015158152602001610213565b34801561027657600080fd5b50600254600354600454600554600654604080516001600160a01b03968716815294861660208601529490921693830193909352606082019290925260ff8083161515608083015261010083048116151560a083015262010000909204909116151560c082015260e001610213565b3480156102f157600080fd5b5061019b6105f4565b34801561030657600080fd5b5060065461025a9062010000900460ff1681565b34801561032657600080fd5b5060065461025a9060ff1681565b34801561034057600080fd5b5061019b610606565b34801561035557600080fd5b5061019b610616565b34801561036a57600080fd5b5060015461010090046001600160a01b03166101ff565b34801561038d57600080fd5b5061039760055481565b604051908152602001610213565b3480156103b157600080fd5b506002546101ff906001600160a01b031681565b61019b6107b0565b3480156103d957600080fd5b5061019b61088d565b3480156103ee57600080fd5b5061019b6103fd366004610b10565b61094a565b34801561040e57600080fd5b5060065461025a90610100900460ff1681565b34801561042d57600080fd5b506004546101ff906001600160a01b031681565b610449610985565b6104516109b8565b565b6004546001600160a01b0316331461047e576040516372cc71e760e11b815260040160405180910390fd5b60065460ff166104a157604051636af784dd60e11b815260040160405180910390fd5b600654610100900460ff16806104bf575060065462010000900460ff165b156104dd576040516331da482760e11b815260040160405180910390fd5b6104e5610a0a565b6104ed610a2e565b6006805462ff00001916620100001790556002546005546040516000926001600160a01b031691908381818185875af1925050503d806000811461054d576040519150601f19603f3d011682016040523d82523d6000602084013e610552565b606091505b50509050806105a35760405162461bcd60e51b815260206004820152601f60248201527f4661696c656420746f2073656e642045544820746f206465706f7369746f720060448201526064016101d6565b6002546005546040519081526001600160a01b03909116907fd7dee2702d63ad89917b6a4da9981c90c4d24f8c2bdfd64c604ecae57d8d0651906020015b60405180910390a2506104516001600055565b6105fc610985565b6104516000610a58565b61060e610985565b610451610ab2565b6004546001600160a01b03163314610641576040516372cc71e760e11b815260040160405180910390fd5b60065460ff1661066457604051636af784dd60e11b815260040160405180910390fd5b600654610100900460ff1680610682575060065462010000900460ff165b156106a0576040516331da482760e11b815260040160405180910390fd5b6106a8610a0a565b6106b0610a2e565b6006805461ff0019166101001790556003546005546040516000926001600160a01b031691908381818185875af1925050503d806000811461070e576040519150601f19603f3d011682016040523d82523d6000602084013e610713565b606091505b505090508061076e5760405162461bcd60e51b815260206004820152602160248201527f4661696c656420746f2073656e642045544820746f2062656e656669636961726044820152607960f81b60648201526084016101d6565b6003546005546040519081526001600160a01b03909116907fb21fb52d5749b80f3182f8c6992236b5e5576681880914484d7f4c9b062e619e906020016105e1565b6002546001600160a01b031633146107db576040516319d1820960e31b815260040160405180910390fd5b60065460ff16156107ff57604051635adf638760e01b815260040160405180910390fd5b610807610a0a565b61080f610a2e565b346000036108305760405163162908e360e11b815260040160405180910390fd5b3460058190556006805460ff191660011790556002546040519182526001600160a01b0316907f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c49060200160405180910390a26104516001600055565b610895610985565b61089d610aed565b4780156109475760015460405160009161010090046001600160a01b03169083908381818185875af1925050503d80600081146108f6576040519150601f19603f3d011682016040523d82523d6000602084013e6108fb565b606091505b50509050806109455760405162461bcd60e51b815260206004820152601660248201527508cc2d2d8cac840e8de40eed2e8d0c8e4c2ee408aa8960531b60448201526064016101d6565b505b50565b610952610985565b6001600160a01b03811661097c57604051631e4fbdf760e01b8152600060048201526024016101d6565b61094781610a58565b6001546001600160a01b036101009091041633146104515760405163118cdaa760e01b81523360048201526024016101d6565b6109c0610aed565b6001805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60015460ff16156104515760405163d93c066560e01b815260040160405180910390fd5b600260005403610a5157604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b600180546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610aba610a0a565b6001805460ff1916811790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258336109ed565b60015460ff1661045157604051638dfc202b60e01b815260040160405180910390fd5b600060208284031215610b2257600080fd5b81356001600160a01b0381168114610b3957600080fd5b939250505056fea264697066735822122042954eb47a9900113126f462ccda8a5cc1a078bd873bd42e74cded3dccc6080e64736f6c63430008140033",
  "deployedBytecode": "0x60806040526004361061010d5760003560e01c806386d1a69f11610095578063d0e30db011610064578063d0e30db0146103c5578063db2e21bc146103cd578063f2fde38b146103e2578063fa2a899714610402578063fe25e00a146104215761019d565b806386d1a69f146103495780638da5cb5b1461035e578063aa8c217c14610381578063c7c4ff46146103a55761019d565b80636234216d116100dc5780636234216d1461026a578063715018a6146102e5578063779cd083146102fa5780637c6543031461031a5780638456cb59146103345761019d565b806338af3eed146101df5780633f4ba83a1461021c578063590e1ae3146102315780635c975abb146102465761019d565b3661019d576002546001600160a01b0316331461013d5760405163a3825a4360e01b815260040160405180910390fd5b60065460ff1661019b573460058190556006805460ff191660011790556002546040519182526001600160a01b0316907f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c49060200160405180910390a25b005b60405162461bcd60e51b8152602060048201526012602482015271119d5b98dd1a5bdb881b9bdd08199bdd5b9960721b60448201526064015b60405180910390fd5b3480156101eb57600080fd5b506003546101ff906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561022857600080fd5b5061019b610441565b34801561023d57600080fd5b5061019b610453565b34801561025257600080fd5b5060015460ff165b6040519015158152602001610213565b34801561027657600080fd5b50600254600354600454600554600654604080516001600160a01b03968716815294861660208601529490921693830193909352606082019290925260ff8083161515608083015261010083048116151560a083015262010000909204909116151560c082015260e001610213565b3480156102f157600080fd5b5061019b6105f4565b34801561030657600080fd5b5060065461025a9062010000900460ff1681565b34801561032657600080fd5b5060065461025a9060ff1681565b34801561034057600080fd5b5061019b610606565b34801561035557600080fd5b5061019b610616565b34801561036a57600080fd5b5060015461010090046001600160a01b03166101ff565b34801561038d57600080fd5b5061039760055481565b604051908152602001610213565b3480156103b157600080fd5b506002546101ff906001600160a01b031681565b61019b6107b0565b3480156103d957600080fd5b5061019b61088d565b3480156103ee57600080fd5b5061019b6103fd366004610b10565b61094a565b34801561040e57600080fd5b5060065461025a90610100900460ff1681565b34801561042d57600080fd5b506004546101ff906001600160a01b031681565b610449610985565b6104516109b8565b565b6004546001600160a01b0316331461047e576040516372cc71e760e11b815260040160405180910390fd5b60065460ff166104a157604051636af784dd60e11b815260040160405180910390fd5b600654610100900460ff16806104bf575060065462010000900460ff165b156104dd576040516331da482760e11b815260040160405180910390fd5b6104e5610a0a565b6104ed610a2e565b6006805462ff00001916620100001790556002546005546040516000926001600160a01b031691908381818185875af1925050503d806000811461054d576040519150601f19603f3d011682016040523d82523d6000602084013e610552565b606091505b50509050806105a35760405162461bcd60e51b815260206004820152601f60248201527f4661696c656420746f2073656e642045544820746f206465706f7369746f720060448201526064016101d6565b6002546005546040519081526001600160a01b03909116907fd7dee2702d63ad89917b6a4da9981c90c4d24f8c2bdfd64c604ecae57d8d0651906020015b60405180910390a2506104516001600055565b6105fc610985565b6104516000610a58565b61060e610985565b610451610ab2565b6004546001600160a01b03163314610641576040516372cc71e760e11b815260040160405180910390fd5b60065460ff1661066457604051636af784dd60e11b815260040160405180910390fd5b600654610100900460ff1680610682575060065462010000900460ff165b156106a0576040516331da482760e11b815260040160405180910390fd5b6106a8610a0a565b6106b0610a2e565b6006805461ff0019166101001790556003546005546040516000926001600160a01b031691908381818185875af1925050503d806000811461070e576040519150601f19603f3d011682016040523d82523d6000602084013e610713565b606091505b505090508061076e5760405162461bcd60e51b815260206004820152602160248201527f4661696c656420746f2073656e642045544820746f2062656e656669636961726044820152607960f81b60648201526084016101d6565b6003546005546040519081526001600160a01b03909116907fb21fb52d5749b80f3182f8c6992236b5e5576681880914484d7f4c9b062e619e906020016105e1565b6002546001600160a01b031633146107db576040516319d1820960e31b815260040160405180910390fd5b60065460ff16156107ff57604051635adf638760e01b815260040160405180910390fd5b610807610a0a565b61080f610a2e565b346000036108305760405163162908e360e11b815260040160405180910390fd5b3460058190556006805460ff191660011790556002546040519182526001600160a01b0316907f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c49060200160405180910390a26104516001600055565b610895610985565b61089d610aed565b4780156109475760015460405160009161010090046001600160a01b03169083908381818185875af1925050503d80600081146108f6576040519150601f19603f3d011682016040523d82523d6000602084013e6108fb565b606091505b50509050806109455760405162461bcd60e51b815260206004820152601660248201527508cc2d2d8cac840e8de40eed2e8d0c8e4c2ee408aa8960531b60448201526064016101d6565b505b50565b610952610985565b6001600160a01b03811661097c57604051631e4fbdf760e01b8152600060048201526024016101d6565b61094781610a58565b6001546001600160a01b036101009091041633146104515760405163118cdaa760e01b81523360048201526024016101d6565b6109c0610aed565b6001805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60015460ff16156104515760405163d93c066560e01b815260040160405180910390fd5b600260005403610a5157604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b600180546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610aba610a0a565b6001805460ff1916811790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258336109ed565b60015460ff1661045157604051638dfc202b60e01b815260040160405180910390fd5b600060208284031215610b2257600080fd5b81356001600160a01b0381168114610b3957600080fd5b939250505056fea264697066735822122042954eb47a9900113126f462ccda8a5cc1a078bd873bd42e74cded3dccc6080e64736f6c63430008140033",
  "devdoc": {
    "author": "Your Name",
    "details": "A secure escrow contract that allows depositors to fund escrows and arbiters to release or refund funds to beneficiaries or depositors respectively.",
    "errors": {
      "EnforcedPause()": [
        {
          "details": "The operation failed because the contract is paused."
        }
      ],
      "ExpectedPause()": [
        {
          "details": "The operation failed because the contract is not paused."
        }
      ],
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ],
      "ReentrancyGuardReentrantCall()": [
        {
          "details": "Unauthorized reentrant call."
        }
      ]
    },
    "events": {
      "Paused(address)": {
        "details": "Emitted when the pause is triggered by `account`."
      },
      "Unpaused(address)": {
        "details": "Emitted when the pause is lifted by `account`."
      }
    },
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Constructor creates a new escrow",
        "params": {
          "_arbiter": "The address that can release or refund funds",
          "_beneficiary": "The address that will receive funds if released",
          "_depositor": "The address that will fund the escrow"
        }
      },
      "deposit()": {
        "details": "Depositor funds the escrow"
      },
      "emergencyWithdraw()": {
        "details": "Emergency withdrawal function (only owner, when paused)"
      },
      "getEscrowStatus()": {
        "details": "Get escrow status"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "pause()": {
        "details": "Emergency pause function (only owner)"
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "refund()": {
        "details": "Arbiter refunds funds to depositor"
      },
      "release()": {
        "details": "Arbiter releases funds to beneficiary"
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unpause()": {
        "details": "Emergency unpause function (only owner)"
      }
    },
    "title": "TrustEscrow",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 296,
        "contract": "contracts/TrustEscrow.sol:TrustEscrow",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 186,
        "contract": "contracts/TrustEscrow.sol:TrustEscrow",
        "label": "_paused",
        "offset": 0,
        "slot": "1",
        "type": "t_bool"
      },
      {
        "astId": 8,
        "contract": "contracts/TrustEscrow.sol:TrustEscrow",
        "label": "_owner",
        "offset": 1,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 384,
        "contract": "contracts/TrustEscrow.sol:TrustEscrow",
        "label": "depositor",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 386,
        "contract": "contracts/TrustEscrow.sol:TrustEscrow",
        "label": "beneficiary",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 388,
        "contract": "contracts/TrustEscrow.sol:TrustEscrow",
        "label": "arbiter",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 390,
        "contract": "contracts/TrustEscrow.sol:TrustEscrow",
        "label": "amount",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 392,
        "contract": "contracts/TrustEscrow.sol:TrustEscrow",
        "label": "isFunded",
        "offset": 0,
        "slot": "6",
        "type": "t_bool"
      },
      {
        "astId": 394,
        "contract": "contracts/TrustEscrow.sol:TrustEscrow",
        "label": "isReleased",
        "offset": 1,
        "slot": "6",
        "type": "t_bool"
      },
      {
        "astId": 396,
        "contract": "contracts/TrustEscrow.sol:TrustEscrow",
        "label": "isRefunded",
        "offset": 2,
        "slot": "6",
        "type": "t_bool"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}